name: Docker Build

on:
  workflow_call:
    inputs:
      name:
        description: "Docker image name in owner/app format. Defaults to github.repo"
        required: false
        type: string
      role-to-assume:
        description: "AWS IAM Role to assume when deploying to ECR."
        required: false
        default: ""
        type: string
      aws-region:
        description: "AWS Region to deploy to."
        required: true
        default: us-west-2
        type: string
      ecr-repo:
        description: "AWS ECR Repo to push to."
        required: false
        default: ""
        type: string
      tag-suffix:
        description: "Append the tag-suffix to the image tag."
        type: string
      push:
        description: "Enable to push built image to GHCR/ECR"
        type: boolean
        default: false
    secrets:
      build-args:
        description: "Pass arbitrary build_args into the docker-build process. This can be used to pass secrets tokens. WARNING: These tokens will become part of the docker image."

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - id: config
      run: |
        account_id='373477481654' # This feels like it should go somewhere else
        name="${{ inputs.name != '' && inputs.name || github.repo }}"
        project="${name#*/}"
        role="arn:aws:iam::${account_id}:role/${project}"
        repo="${account_id}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${project}"
        echo "ecr-repo=${{ inputs.ecr-repo != '' && inputs.ecr-repo || '${repo}' }}" >> "${GITHUB_OUTPUTS}"
        echo "role-to-assume=${{ inputs.role-to-assume != '' && inputs.role-to-assume || "${role}" }}" >> "${GITHUB_OUTPUTS}"

    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ steps.config.outputs.role-to-assume }}
        aws-region: ${{ inputs.aws-region }}

    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - id: docker-metadata
      uses: docker/metadata-action@v3
      with:
        images: |
          ghcr.io/${{ github.repo }}
          ${{ steps.config.outputs.ecr-repo }}
        flavour:
          latest=auto
          suffix=${{ inputs.suffix != '' && "-${{ inputs.suffix }}" || '' }},onlatest=true
        tags: |
          type=sha,prefix=,format=short

    - id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - id: login-ghcr
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - id: build-push
      uses: docker/build-push-action@v3
      with:
        push: ${{ inputs.push }}
        tags: ${{ steps.docker-metadata.outputs.tags }}
        labels: ${{ steps.docker-metadata.outputs.labels }}
        build-args: ${{ inputs.build-args }}
        cache-from: type=registry,ref=ghcr.io/${{ github.repo }}:latest
        cache-to: type=inline

    - if: always()
      run: |
        docker logout ${{ steps.login-ecr.outputs.registry }}
        docker logout ${{ steps.login-ghcr.outputs.registry }}
