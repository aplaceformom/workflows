name: Docker Build

on:
  workflow_call:
    inputs:
      submodules:
        description: "Perform submodule checkouts as well."
        required: false
        default: false
        type: boolean
      deployment-role:
        description: "AWS IAM Role to assume when deploying to ECR."
        required: false
        default: ""
        type: string
      aws-region:
        description: "AWS Region to deploy to."
        required: false
        default: us-west-2
        type: string
      context:
        description: "Path to Dockerfile. Defaults to `.`"
        type: string
        default: "."
      dockerfile:
        description: "Path and filename for Dockerfile to use. Defaults to `./Dockerfile`"
        type: string
        default: "./Dockerfile"
      env:
        description: "Target environment for deploying into"
        type: string
        default: "dev"
      stamp:
        description: "optional identifying tag to be placed inside the repo (file: build.stamp)"
        required: false
        default: "${github.sha}"
        type: string
      ecr-repo:
        description: "AWS ECR Repo to push to."
        required: false
        default: ""
        type: string
      ecr-root:
        description: "Use the current account ECR repo or the root account ECR repo."
        default: true
        type: boolean
      deploy-tag:
        description: "Add this as an alias tag on the container, for deployments."
        required: false
        default: latest
        type: string
      driver-opts:
        description: "Driver-opts to pass to buildx."
        type: string
        required: false
      tag-suffix:
        description: "Append the tag-suffix to the image tag."
        type: string
      push:
        description: "Enable to push built image to GHCR/ECR"
        type: boolean
        default: false
      platform:
        description: "<os-version> to process the build on. E.g. ubuntu-latest"
        type: string
        default: ubuntu-latest
    secrets:
      build-args:
        description: "Pass arbitrary build_args into the docker-build process. This can be used to pass secrets tokens. WARNING: These tokens will become part of the docker image."
      token:
        description: "Auth token to use, default to github.token"
        required: false
    outputs:
      ecr-repo:
        description: "Elastic Container Registry URI"
        value: "${{ jobs.build.login-ecr.outputs.registry }}"
      ghcr-repo:
        description: "GitHub Container Registry URI"
        value: "${{ jobs.build.login-ghcr.outputs.registry }}"

env:
  GITHUB_TOKEN: ${{ secrets.token == '' && secrets.token || github.token }}
  SUBMODULE_REC: ${{ inputs.submodules == true && 'recursive' || 'false' }}

jobs:
  config:
    uses: aplaceformom/workflows/.github/workflows/default-config.yaml@main
    with:
      deployment-role: ${{ inputs.deployment-role || '' }}
      ecr-repo: ${{ inputs.ecr-repo  || '' }}
      ecr-root: ${{ inputs.ecr-root }}
      aws-region: ${{ inputs.aws-region || '' }}
      env: ${{ inputs.env || 'dev' }}

  build:
    runs-on: ${{ inputs.platform }}
    needs: [config]
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ needs.config.outputs.deployment-role }}
          aws-region: ${{ needs.config.outputs.aws-region }}

      - uses: actions/checkout@v3
        with:
          submodules: "${{ env.SUBMODULE_REC }}"

      - name: stamp the build
        run: echo "${{ inputs.stamp }}" > build.stamp

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: ${{ inputs.driver-opts }}

      - id: docker-metadata
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ needs.config.outputs.ecr-repo }}
          tags: |
            build-{{date 'YYYYMMDD-hhmmss'}}
            latest${{ inputs.suffix != '' && '-${{ inputs.suffix }}' || '' }}
            ${{ needs.config.outputs.short-rev }}${{ inputs.suffix != '' && '-${{ inputs.suffix }}' || '' }}
            ${{ inputs.deploy-tag != '' && inputs.deploy-tag || '' }}

      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - id: login-ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - id: build-push
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          push: ${{ inputs.push }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          build-args: ${{ secrets.build-args }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline
          file: ${{ inputs.dockerfile }}

      - if: always()
        run: |
          docker logout ${{ steps.login-ecr.outputs.registry }}
          docker logout ${{ steps.login-ghcr.outputs.registry }}
