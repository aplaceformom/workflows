name: Docker Build (windows)

on:
  workflow_call:
    inputs:
      deployment-role:
        description: "AWS IAM Role to assume when deploying to ECR."
        required: false
        default: ""
        type: string
      aws-region:
        description: "AWS Region to deploy to."
        required: false
        default: us-west-2
        type: string
      context:
        description: "Path to Dockerfile. Defaults to `.`"
        type: string
        default: "."
      env:
        description: "Target environment for deploying into"
        type: string
        default: "dev"
      ecr-repo:
        description: "AWS ECR Repo to push to."
        required: false
        default: ""
        type: string
      ecr-root:
        description: "Use the current account ECR repo or the root account ECR repo."
        default: true
        type: boolean
      deploy-tag:
        description: "Add this as an alias tag on the container, for deployments."
        required: false
        default: latest
        type: string
      tag-suffix:
        description: "Append the tag-suffix to the image tag."
        type: string
      push:
        description: "Enable to push built image to GHCR/ECR"
        type: boolean
        default: false
      windows-version:
        description: "Select which version of Windows to use."
        type: string
        default: latest
    secrets:
      build-args:
        description: "Pass arbitrary build_args into the docker-build process. This can be used to pass secrets tokens. WARNING: These tokens will become part of the docker image."
      token:
        description: "Auth token to use, default to github.token"
        required: false
    outputs:
      ecr-repo:
        description: "Elastic Container Registry URI"
        value: "${{ jobs.build.login-ecr.outputs.registry }}"
      ghcr-repo:
        description: "GitHub Container Registry URI"
        value: "${{ jobs.build.login-ghcr.outputs.registry }}"

env:
  GITHUB_TOKEN: ${{ secrets.token == '' && secrets.token || github.token }}

jobs:
  config:
    uses: aplaceformom/workflows/.github/workflows/default-config.yaml@main
    with:
      deployment-role: ${{ inputs.deployment-role || '' }}
      ecr-repo: ${{ inputs.ecr-repo  || '' }}
      ecr-root: ${{ inputs.ecr-root }}
      aws-region: ${{ inputs.aws-region || '' }}
      env: ${{ inputs.env || 'dev' }}

  build:
    runs-on: windows-${{ inputs.windows-version }}
    needs: [config]
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ needs.config.outputs.deployment-role }}
          aws-region: ${{ needs.config.outputs.aws-region }}

      - id: aws-debug
        run: |
          aws sts get-caller-identity

      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - id: login-ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - id: docker-config
        shell: bash
        run: |
          : Generate Docker Metadata
          build_args() {
          while read arg; do
            test -n "${arg}" || continue
            arg="$(echo "${arg}" | sed -e 's/^[[:space:]]\+//;s/[[:space:]]\+$//')"
            printf ' --build-arg "%s" ' "${arg}"
          done<<EOF
          ${{ secrets.build-args }}
          EOF
          printf '\n'
          }
          tag_suffix=
          test -z "${{ inputs.tag-suffix }}" || tag_suffix='-${{ inputs.tag-suffix }}'
          images=
          tag_args=
          for version in ${{ needs.config.outputs.short-rev }} ${{ inputs.deploy-tag }} "latest-$(date '+%Y%m%d-%H%M%SA')" latest; do
            image="${{ needs.config.outputs.project }}:${version}${tag_suffix}"
            images="${images} ${image} ghcr.io/aplaceformom/${image} ${{ steps.login-ecr.outputs.registry }}/${image}"
            tag_args="${tag_args} -t ${image} -t ghcr.io/aplaceformom/${image} -t ${{ steps.login-ecr.outputs.registry }}/${image}"
          done
          echo "images=${images}" >> "${GITHUB_OUTPUT}"
          echo "tag-args=${tag_args}" >> "${GITHUB_OUTPUT}"
          if test -n "${{ secrets.build-args }}"; then echo "build-args=$(build_args)" >> "${GITHUB_OUTPUT}"
          else echo 'build-args=' >> "${GITHUB_OUTPUT}"; fi

      - uses: actions/checkout@v3

      - id: docker-pull
        shell: bash
        run: |
          docker pull "ghcr.io/aplaceformom/${{ needs.config.outputs.project }}:latest" || :

      - id: docker-build
        run: |
          docker build ${{ steps.docker-config.outputs.build-args }} ${{ steps.docker-config.outputs.tag-args }} ${{ inputs.context }}

      - id: docker-push
        if: ${{ inputs.push }}
        shell: bash
        run: |
          : Docker Push
          set -e
          for repo in ghcr.io/aplaceformom ${{ steps.login-ecr.outputs.registry }}; do
            docker push --all-tags "${repo}/${{ needs.config.outputs.project }}" &
          done
          wait

      - if: always()
        run: |
          docker logout ${{ steps.login-ecr.outputs.registry }}
          docker logout ${{ steps.login-ghcr.outputs.registry }}
